-- Dynamic Website Example for RedNet-Explorer
-- This demonstrates a secure Lua-powered website using the sandbox

-- Page header
print([[<rwml version="1.0">
<head>
    <title>Dynamic Lua Site</title>
    <meta name="description" content="Example of a dynamic website powered by sandboxed Lua" />
</head>
<body bgcolor="black" color="white">
    <h1 color="lime">Dynamic Lua Website</h1>
    <p>This page is generated by server-side Lua code running in a secure sandbox.</p>
    <hr color="gray" />
]])

-- Display request information
print("<h2>Request Information</h2>")
print("<p>Method: " .. request.method .. "</p>")
print("<p>URL: " .. html.escape(request.url) .. "</p>")
print("<p>Time: " .. os.date("%Y-%m-%d %H:%M:%S") .. "</p>")

-- Handle different pages based on URL
if request.url == "/" or request.url == "/index.lua" then
    -- Homepage
    print([[
    <h2>Welcome!</h2>
    <p>This is a demonstration of RedNet-Explorer's Lua scripting capabilities.</p>
    
    <h3>Features:</h3>
    <ul>
        <li>Secure sandboxed execution</li>
        <li>Dynamic content generation</li>
        <li>Form handling</li>
        <li>Session-like storage</li>
    </ul>
    
    <p>Try these examples:</p>
    <ul>
        <li><link url="/counter.lua">Visit Counter</link></li>
        <li><link url="/form.lua">Contact Form</link></li>
        <li><link url="/api.lua?action=time">API Example</link></li>
    </ul>
    ]])
    
elseif request.url:match("^/counter%.lua") then
    -- Visit counter using storage
    local visits = storage.get("visits") or 0
    visits = visits + 1
    storage.set("visits", visits)
    
    print("<h2>Visit Counter</h2>")
    print("<p>This page has been visited <b>" .. visits .. "</b> times!</p>")
    print("<p><link url='/'>Back to Home</link></p>")
    
elseif request.url:match("^/form%.lua") then
    -- Contact form example
    if request.method == "POST" and request.params.name then
        -- Handle form submission
        print("<h2>Thank You!</h2>")
        print("<p>Thanks for your message, " .. html.escape(request.params.name) .. "!</p>")
        print("<p>We received your message:</p>")
        print("<div bgcolor='gray' padding='1'>")
        print("<p>" .. html.escape(request.params.message or "") .. "</p>")
        print("</div>")
        print("<p><link url='/form.lua'>Send another message</link></p>")
    else
        -- Show form
        print([[
        <h2>Contact Form</h2>
        <form method="post" action="/form.lua">
            <p>Name:<br /><input type="text" name="name" required /></p>
            <p>Email:<br /><input type="text" name="email" /></p>
            <p>Message:<br /><textarea name="message" rows="5" cols="40" required></textarea></p>
            <p><button type="submit" bgcolor="green" color="white">Send Message</button></p>
        </form>
        ]])
    end
    print("<p><link url='/'>Back to Home</link></p>")
    
elseif request.url:match("^/api%.lua") then
    -- API endpoint example
    response.setHeader("Content-Type", "application/json")
    
    local action = request.params.action or "default"
    local data = {}
    
    if action == "time" then
        data = {
            timestamp = os.epoch("utc"),
            formatted = os.date("%Y-%m-%d %H:%M:%S"),
            timezone = "UTC"
        }
    elseif action == "info" then
        data = {
            server = "RedNet-Explorer",
            version = "1.0",
            lua = _VERSION
        }
    else
        data = {
            error = "Unknown action",
            available = {"time", "info"}
        }
        response.status = 400
    end
    
    print(json.encode(data))
    return  -- Don't print footer for API
    
else
    -- 404 page
    response.status = 404
    print("<h2 color='red'>Page Not Found</h2>")
    print("<p>The page '" .. html.escape(request.url) .. "' was not found.</p>")
    print("<p><link url='/'>Go to Homepage</link></p>")
end

-- Page footer
print([[
    <hr color="gray" />
    <p align="center">
        <span color="gray">Powered by RedNet-Explorer | Server time: ]] .. os.date("%H:%M:%S") .. "</span>" .. [[
    </p>
</body>
</rwml>]])